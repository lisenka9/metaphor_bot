from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackQueryHandler
from database import db 
from config import ADMIN_IDS
import logging
import keyboard
import csv
import io
from datetime import datetime

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    logging.info(f"New user: ID={user.id}, Name={user.first_name}, "
                 f"Username=@{user.username}, LastName={user.last_name}")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π None –∑–Ω–∞—á–µ–Ω–∏–π
    db.get_or_create_user(
        user_id=user.id,
        username=user.username or "",  # –ï—Å–ª–∏ username None - –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
        first_name=user.first_name or "",  # –ï—Å–ª–∏ first_name None
        last_name=user.last_name or ""  # –ï—Å–ª–∏ last_name None
    )
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É—á–µ—Ç–æ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if user.first_name:
        greeting = f"{user.first_name}, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!"
    else:
        greeting = f"@{user.username}, –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!"
    
    photo_url = "https://ibb.co/0bc2b6M" 
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ —Å –∫–æ—Ä–æ—Ç–∫–∏–º –∑–∞–≥–æ–ª–æ–≤–∫–æ–º
        short_caption = f"{greeting}\n\n–ú–µ–Ω—è –∑–æ–≤—É—Ç –°–≤–µ—Ç–ª–∞–Ω–∞ –°–∫—Ä–æ–º–æ–≤–∞. –Ø –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–∏–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ-–æ–±—Ä–∞–∑–Ω—ã–π —Ç–µ—Ä–∞–ø–µ–≤—Ç –∏ –∞–≤—Ç–æ—Ä —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –∫–æ–ª–æ–¥—ã –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç '–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–∞–∫ –º–æ—Ä–µ'."
        await update.message.reply_photo(
            photo=photo_url,
            caption=short_caption,
            parse_mode='Markdown'
        )
        
        # –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        welcome_text = f"""

üåä –û –∫–æ–ª–æ–¥–µ –∏ –º–∏—Å—Å–∏–∏ –±–æ—Ç–∞

–ú–æ—Ä–µ, –∫–∞–∫ –∏ –Ω–∞—à–∞ –∂–∏–∑–Ω—å, –º–Ω–æ–≥–æ–ª–∏–∫–æ: –æ–Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–∞—Å–∫–æ–≤—ã–º, —É–º–∏—Ä–æ—Ç–≤–æ—Ä—è—é—â–∏–º, –∞ –ø–æ—Ä–æ–π ‚Äî –≥—Ä–æ–∑–Ω—ã–º –∏ —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω—ã–º. –≠—Ç–æ—Ç –æ–±—Ä–∞–∑ –∏–¥–µ–∞–ª—å–Ω–æ –æ—Ç—Ä–∞–∂–∞–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞: –æ—Ç —à—Ç–∏–ª—è –¥–æ –±—É—Ä–∏.

–ö–∞–∂–¥–∞—è –∫–∞—Ä—Ç–∞ –∫–æ–ª–æ–¥—ã –ø—Ä–æ–ø–∏—Ç–∞–Ω–∞ —ç–Ω–µ—Ä–≥–∏–µ–π –º–æ—Ä—è –∏ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º:

–£–≤–∏–¥–µ—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π.

–ù–∞–ø–æ–ª–Ω–∏—Ç—å—Å—è —Ä–µ—Å—É—Ä—Å–∞–º–∏ –∏ —ç–Ω–µ—Ä–≥–∏–µ–π, –∫–æ—Ç–æ—Ä—É—é –Ω–µ—Å–µ—Ç –≤ —Å–µ–±–µ –º–æ—Ä—Å–∫–∞—è —Å—Ç–∏—Ö–∏—è.

–ù–∞—É—á–∏—Ç—å—Å—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å —Å–≤–æ–∏ —ç–º–æ—Ü–∏–∏ –∏ –±—ã—Ç—å —Å –Ω–∏–º–∏ –≤ –∫–æ–Ω—Ç–∞–∫—Ç–µ.

–ö–æ–ª–æ–¥–∞ "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–∞–∫ –º–æ—Ä–µ" –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞–≥–ª—è–Ω—É—Ç—å –≤ –≥–ª—É–±–∏–Ω—É —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–≥–æ, –æ—Å–æ–∑–Ω–∞—Ç—å —ç–º–æ—Ü–∏–∏, –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è —Å —Ç–µ–º, —á—Ç–æ –ø–æ–¥–∞–≤–ª–µ–Ω–æ, –∏ –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è —Ä–æ—Å—Ç–∞.

‚ú® –í –¥–æ–±—Ä—ã–π –ø—É—Ç—å!
–Ø –±–ª–∞–≥–æ–¥–∞—Ä—é –í–∞—Å –∑–∞ –¥–æ–≤–µ—Ä–∏–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å –∫ —Å–≤–æ–µ–º—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –º–∏—Ä—É.

–í—ã–±–∏—Ä–∞–π—Ç–µ –≤ –º–µ–Ω—é –±–æ—Ç–∞ —Ç–æ, —á—Ç–æ –¥–ª—è –í–∞—Å —Å–µ–π—á–∞—Å –Ω–∞–∏–±–æ–ª–µ–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ!

‚ú® –ö–æ–º–∞–Ω–¥—ã:
/daily - –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è
/resources - –ê—Ä—Ö–∏–ø–µ–ª–∞–≥ —Ä–µ—Å—É—Ä—Å–æ–≤ 
/guide - –ì–∞–π–¥ –ø–æ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º—É –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É
/profile - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/help - –ü–æ–º–æ—â—å
/history - –ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –∫–∞—Ä—Ç
/consult - –ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
        """
        
        await update.message.reply_text(welcome_text, parse_mode='Markdown')
        
    except Exception as e:
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        logging.error(f"Error sending photo: {e}")
        full_text = f"""
{greeting}

–ú–µ–Ω—è –∑–æ–≤—É—Ç –°–≤–µ—Ç–ª–∞–Ω–∞ –°–∫—Ä–æ–º–æ–≤–∞. –Ø –ø—Ä–∞–∫—Ç–∏–∫—É—é—â–∏–π —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ-–æ–±—Ä–∞–∑–Ω—ã–π —Ç–µ—Ä–∞–ø–µ–≤—Ç –∏ –∞–≤—Ç–æ—Ä —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –∫–æ–ª–æ–¥—ã –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–∞–∫ –º–æ—Ä–µ".

üåä –û –∫–æ–ª–æ–¥–µ –∏ –º–∏—Å—Å–∏–∏ –±–æ—Ç–∞
–ú–æ—Ä–µ, –∫–∞–∫ –∏ –Ω–∞—à–∞ –∂–∏–∑–Ω—å, –º–Ω–æ–≥–æ–ª–∏–∫–æ: –æ–Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–∞—Å–∫–æ–≤—ã–º, —É–º–∏—Ä–æ—Ç–≤–æ—Ä—è—é—â–∏–º, –∞ –ø–æ—Ä–æ–π ‚Äî –≥—Ä–æ–∑–Ω—ã–º –∏ —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω—ã–º. –≠—Ç–æ—Ç –æ–±—Ä–∞–∑ –∏–¥–µ–∞–ª—å–Ω–æ –æ—Ç—Ä–∞–∂–∞–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞: –æ—Ç —à—Ç–∏–ª—è –¥–æ –±—É—Ä–∏.

–ö–∞–∂–¥–∞—è –∫–∞—Ä—Ç–∞ –∫–æ–ª–æ–¥—ã –ø—Ä–æ–ø–∏—Ç–∞–Ω–∞ —ç–Ω–µ—Ä–≥–∏–µ–π –º–æ—Ä—è –∏ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º:

–£–≤–∏–¥–µ—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π.

–ù–∞–ø–æ–ª–Ω–∏—Ç—å—Å—è —Ä–µ—Å—É—Ä—Å–∞–º–∏ –∏ —ç–Ω–µ—Ä–≥–∏–µ–π, –∫–æ—Ç–æ—Ä—É—é –Ω–µ—Å–µ—Ç –≤ —Å–µ–±–µ –º–æ—Ä—Å–∫–∞—è —Å—Ç–∏—Ö–∏—è.

–ù–∞—É—á–∏—Ç—å—Å—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å —Å–≤–æ–∏ —ç–º–æ—Ü–∏–∏ –∏ –±—ã—Ç—å —Å –Ω–∏–º–∏ –≤ –∫–æ–Ω—Ç–∞–∫—Ç–µ.

‚ú® –ö–æ–º–∞–Ω–¥—ã:
/daily - –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è
/profile - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/help - –ü–æ–º–æ—â—å
/history - –ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –∫–∞—Ä—Ç
        """
        await update.message.reply_text(full_text, parse_mode='Markdown')

async def daily_card(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /daily —Å –Ω–æ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π"""
    user = update.effective_user
    
    can_take, reason = db.can_take_daily_card(user.id)
    
    if not can_take:
        await update.message.reply_text(f"‚ùå {reason}")
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—á–∞–ª –ø—Ä–æ—Ü–µ—Å—Å
    context.user_data['daily_in_progress'] = True
    
    intro_text = """
üåä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ –≤–æ–ª–Ω—É –¥–Ω—è

–ü—Ä–µ–∂–¥–µ, —á–µ–º —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä –∫–∞—Ä—Ç—ã, —Å–æ–∑–¥–∞–π—Ç–µ –¥–ª—è —Å–µ–±—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Ç–∏—à–∏–Ω—ã –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è ü¶ã

üíé –°–¥–µ–ª–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≥–ª—É–±–æ–∫–∏—Ö –≤–¥–æ—Ö–æ–≤, –∑–∞–∫—Ä–æ–π—Ç–µ –≥–ª–∞–∑–∞ –∏ –Ω–∞–ø—Ä–∞–≤—å—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –≤–Ω—É—Ç—Ä—å: –∫–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∑–∞–¥–∞—á–∞ —Å–µ–π—á–∞—Å –¥–ª—è –≤–∞—Å –Ω–∞–∏–±–æ–ª–µ–µ –∞–∫—Ç—É–∞–ª—å–Ω–∞?

üíé –°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∫ –∫–∞—Ä—Ç–µ.

üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ü—É—Å—Ç—å –≤–æ–ø—Ä–æ—Å –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã–º, –Ω–∞–ø—Ä–∏–º–µ—Ä:¬´–ö–∞–∫–æ–π —Ä–µ—Å—É—Ä—Å –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ —Å–µ–≥–æ–¥–Ω—è?¬ª –∏–ª–∏ ¬´–í —á—ë–º –º–Ω–µ —Å—Ç–æ–∏—Ç –ø—Ä–æ—è–≤–∏—Ç—å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å?¬ª

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é –∫–∞—Ä—Ç—É –¥–Ω—è!
"""
    
    await update.message.reply_text(
        intro_text,
        reply_markup=keyboard.get_daily_intro_keyboard(),
        parse_mode='Markdown'
    )

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    # ‚úÖ –ó–∞—â–∏—Ç–∞ –æ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –Ω–∞–∂–∞—Ç–∏–π
    user_id = query.from_user.id
    current_time = datetime.now().timestamp()
    
    if 'last_button_click' in context.user_data:
        last_click = context.user_data['last_button_click']
        if current_time - last_click < 3:  # 3 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É –Ω–∞–∂–∞—Ç–∏—è–º–∏
            logging.info(f"‚ö° Fast click protection for user {user_id}")
            return
    
    context.user_data['last_button_click'] = current_time
    
    # ‚úÖ –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∫–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞
    logging.info(f"üîÑ Button pressed: {query.data} by user {user_id}")
    
    if query.data == "show_daily_intro":
        await show_daily_intro_from_button(query, context)
        
    elif query.data == "get_daily_card":
        await show_daily_card(query, context)
        
    elif query.data == "get_daily_message":
        await show_daily_message(query, context)
        
    elif query.data == "flip_card":
        await handle_flip_card(query, context)
    
    elif query.data == "show_history_pics":
        await show_history_pics_from_button(query, context)
    
    elif query.data == "main_menu":
        await show_main_menu_from_button(query, context)
    
    elif query.data == "profile":
        await show_profile_from_button(query, context)
    
    elif query.data == "history":
        await show_history_from_button(query, context)
    
    elif query.data == "consult":
        await show_consult_from_button(query, context)
    
    elif query.data == "start_consult_form":
        await start_consult_form(query, context)
    
    elif query.data == "resources":
        await show_resources_from_button(query, context)
    
    elif query.data == "guide":
        await show_guide_from_button(query, context)

async def start_consult_form(query, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞—á–∏–Ω–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"""
    # –£–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É –∏–∑ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    await query.edit_message_reply_markup(reply_markup=None)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–æ—Ä–º—ã
    context.user_data['consult_form'] = {
        'step': 1,
        'user_id': query.from_user.id,
        'username': query.from_user.username or query.from_user.first_name
    }
    
    # –ü–µ—Ä–≤—ã–π –≤–æ–ø—Ä–æ—Å —Ñ–æ—Ä–º—ã
    question_text = """
üìù –ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –Ω–∏–∂–µ. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–π –≤—Å—Ç—Ä–µ—á–µ.

1. –ö–∞–∫ —è –º–æ–≥—É –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?
"""
    
    await query.message.reply_text(
        question_text,
        parse_mode='Markdown'
    )

async def handle_consult_form(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã —Ñ–æ—Ä–º—ã –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"""
    user_data = context.user_data.get('consult_form', {})
    
    if not user_data or 'step' not in user_data:
        await handlers.help_command(update, context)
        return
    
    step = user_data['step']
    user_id = user_data['user_id']
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Ç–æ–≥–æ –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if update.effective_user.id != user_id:
        return
    
    user_answer = update.message.text
    
    if step == 1:
        user_data['name'] = user_answer
        user_data['step'] = 2
        question_text = "2. –û–ø–∏—à–∏—Ç–µ –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–ª–æ–≤–∞—Ö –ø—Ä–æ–±–ª–µ–º—É/–∑–∞–ø—Ä–æ—Å, —Å –∫–æ—Ç–æ—Ä—ã–º —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–π—Ç–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"
        await update.message.reply_text(question_text, parse_mode='Markdown')
        
    elif step == 2:
        user_data['problem'] = user_answer
        user_data['step'] = 3
        question_text = "3. –ù–∞–ø–∏—à–∏—Ç–µ –≤—Ä–µ–º—è —Å –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å—è –ø–æ —Å—Ä–µ–¥—É, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"
        await update.message.reply_text(question_text, parse_mode='Markdown')
        
    elif step == 3:
        user_data['preferred_time'] = user_answer
        user_data['step'] = 4
        question_text = "4. –£–∫–∞–∂–∏—Ç–µ –í–∞—à Telegram-–Ω–∏–∫ –∏–ª–∏ WhatsApp –¥–ª—è —Å–≤—è–∑–∏\n\n–í –±–ª–∏–∂–∞–π—à–∏–µ 24 —á–∞—Å–∞ —è –Ω–∞–ø–∏—à—É –í–∞–º –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏."
        await update.message.reply_text(question_text, parse_mode='Markdown')
        
    elif step == 4:
        user_data['contact'] = user_answer
        
        # –ü–æ–ª—É—á–∞–µ–º –º–æ—Å–∫–æ–≤—Å–∫–æ–µ –≤—Ä–µ–º—è
        try:
            import pytz
            moscow_tz = pytz.timezone('Europe/Moscow')
            moscow_time = datetime.now(moscow_tz)
        except:
            # –ï—Å–ª–∏ pytz –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è —Å –ø–æ–º–µ—Ç–∫–æ–π –ú–°–ö
            moscow_time = datetime.now()
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Å–∏—Ö–æ–ª–æ–≥—É
        consult_summary = f"""
üìã *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é*

üë§ *–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:* @{update.effective_user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}

üìù *–î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:*
‚Ä¢ *–ò–º—è:* {user_data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
‚Ä¢ *–ü—Ä–æ–±–ª–µ–º–∞/–∑–∞–ø—Ä–æ—Å:* {user_data.get('problem', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
‚Ä¢ *–£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è:* {user_data.get('preferred_time', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
‚Ä¢ *–ö–æ–Ω—Ç–∞–∫—Ç:* {user_data.get('contact', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}

‚è∞ *–í—Ä–µ–º—è –∑–∞—è–≤–∫–∏:* {moscow_time.strftime('%d.%m.%Y %H:%M')} (–º—Å–∫)
"""
        
        try:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞—è–≤–∫—É –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
            from config import ADMIN_IDS
            sent_to_admins = []
            
            for admin_id in ADMIN_IDS:
                try:
                    await context.bot.send_message(
                        chat_id=admin_id,
                        text=consult_summary,
                        parse_mode='Markdown'
                    )
                    sent_to_admins.append(admin_id)
                    logging.info(f"‚úÖ Consult form sent to admin {admin_id}")
                except Exception as admin_error:
                    logging.error(f"‚ùå Error sending to admin {admin_id}: {admin_error}")
            
            if sent_to_admins:
                # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                success_text = f"""
‚úÖ *–°–ø–∞—Å–∏–±–æ! –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!*

–í –±–ª–∏–∂–∞–π—à–∏–µ 24 —á–∞—Å–∞ —è —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.
"""
                await update.message.reply_text(
                    success_text,
                    parse_mode='Markdown',
                    reply_markup=keyboard.get_main_menu_keyboard()
                )
            else:
                raise Exception("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∏ –æ–¥–Ω–æ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É")
            
        except Exception as e:
            logging.error(f"‚ùå Error sending consult form: {e}")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
            copyable_form = f"""
‚ùå *–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏*

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–ø—Ä—è–º—É—é @Skromova_Svetlana_psy:

*–ò–º—è:* {user_data.get('name', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
*–ü—Ä–æ–±–ª–µ–º–∞:* {user_data.get('problem', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
*–£–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è:* {user_data.get('preferred_time', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
*–ö–æ–Ω—Ç–∞–∫—Ç:* {user_data.get('contact', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')}
*–ú–æ–π Telegram:* @{update.effective_user.username or '–Ω–µ —É–∫–∞–∑–∞–Ω'}
*–í—Ä–µ–º—è –∑–∞—è–≤–∫–∏:* {moscow_time.strftime('%d.%m.%Y %H:%M')} (–º—Å–∫)
"""
            await update.message.reply_text(
                copyable_form,
                parse_mode='Markdown',
                reply_markup=keyboard.get_main_menu_keyboard()
            )
        
        # –û—á–∏—â–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã
        if 'consult_form' in context.user_data:
            del context.user_data['consult_form']

            

async def admin_consult_requests(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞—è–≤–∫–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    user = update.effective_user
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if user.id not in ADMIN_IDS:
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞—è–≤–æ–∫ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    # –µ—Å–ª–∏ –≤—ã —Ä–µ—à–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏—Ö –≤ –±–∞–∑—É
    
    await update.message.reply_text(
        "üìã –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞—è–≤–æ–∫ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é.\n"
        "–ó–∞—è–≤–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –≤—Å–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.",
        parse_mode='Markdown'
    )


async def show_daily_intro_from_button(query, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ç—Ä–æ –¥–ª—è –∫–∞—Ä—Ç—ã –¥–Ω—è –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ –∏–∑ –º–µ–Ω—é"""
    user = query.from_user
    
    # ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç –°–†–ê–ó–£ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ "–ö–∞—Ä—Ç–∞ –¥–Ω—è" –≤ –º–µ–Ω—é
    can_take, reason = db.can_take_daily_card(user.id)
    if not can_take:
        await query.message.reply_text(f"‚ùå {reason}")
        return
    
    intro_text = """
üåä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞ –≤–æ–ª–Ω—É –¥–Ω—è

–ü—Ä–µ–∂–¥–µ, —á–µ–º —Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä –∫–∞—Ä—Ç—ã, —Å–æ–∑–¥–∞–π—Ç–µ –¥–ª—è —Å–µ–±—è –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ —Ç–∏—à–∏–Ω—ã –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏—è ü¶ã

üíé –°–¥–µ–ª–∞–π—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≥–ª—É–±–æ–∫–∏—Ö –≤–¥–æ—Ö–æ–≤, –∑–∞–∫—Ä–æ–π—Ç–µ –≥–ª–∞–∑–∞ –∏ –Ω–∞–ø—Ä–∞–≤—å—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –≤–Ω—É—Ç—Ä—å: –∫–∞–∫–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –∑–∞–¥–∞—á–∞ —Å–µ–π—á–∞—Å –¥–ª—è –≤–∞—Å –Ω–∞–∏–±–æ–ª–µ–µ –∞–∫—Ç—É–∞–ª—å–Ω–∞?

üíé –°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∫ –∫–∞—Ä—Ç–µ.

üí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –ü—É—Å—Ç—å –≤–æ–ø—Ä–æ—Å –±—É–¥–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã–º, –Ω–∞–ø—Ä–∏–º–µ—Ä:¬´–ö–∞–∫–æ–π —Ä–µ—Å—É—Ä—Å –ø–æ–º–æ–∂–µ—Ç –º–Ω–µ —Å–µ–≥–æ–¥–Ω—è?¬ª –∏–ª–∏ ¬´–í —á—ë–º –º–Ω–µ —Å—Ç–æ–∏—Ç –ø—Ä–æ—è–≤–∏—Ç—å –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç—å?¬ª

–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ—é –∫–∞—Ä—Ç—É –¥–Ω—è!
"""
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ç—Ä–æ, –Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É—è –ø—Ä–µ–¥—ã–¥—É—â–µ–µ
    await query.message.reply_text(
        intro_text,
        reply_markup=keyboard.get_daily_intro_keyboard(),
        parse_mode='Markdown'
    )


async def show_main_menu_from_button(query, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ (–Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ)"""
    menu_text = """
üåä –û –∫–æ–ª–æ–¥–µ –∏ –º–∏—Å—Å–∏–∏ –±–æ—Ç–∞

–ú–æ—Ä–µ, –∫–∞–∫ –∏ –Ω–∞—à–∞ –∂–∏–∑–Ω—å, –º–Ω–æ–≥–æ–ª–∏–∫–æ: –æ–Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–∞—Å–∫–æ–≤—ã–º, —É–º–∏—Ä–æ—Ç–≤–æ—Ä—è—é—â–∏–º, –∞ –ø–æ—Ä–æ–π ‚Äî –≥—Ä–æ–∑–Ω—ã–º –∏ —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω—ã–º. –≠—Ç–æ—Ç –æ–±—Ä–∞–∑ –∏–¥–µ–∞–ª—å–Ω–æ –æ—Ç—Ä–∞–∂–∞–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞: –æ—Ç —à—Ç–∏–ª—è –¥–æ –±—É—Ä–∏.

–ö–∞–∂–¥–∞—è –∫–∞—Ä—Ç–∞ –∫–æ–ª–æ–¥—ã –ø—Ä–æ–ø–∏—Ç–∞–Ω–∞ —ç–Ω–µ—Ä–≥–∏–µ–π –º–æ—Ä—è –∏ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º:

–£–≤–∏–¥–µ—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π.

–ù–∞–ø–æ–ª–Ω–∏—Ç—å—Å—è —Ä–µ—Å—É—Ä—Å–∞–º–∏ –∏ —ç–Ω–µ—Ä–≥–∏–µ–π, –∫–æ—Ç–æ—Ä—É—é –Ω–µ—Å–µ—Ç –≤ —Å–µ–±–µ –º–æ—Ä—Å–∫–∞—è —Å—Ç–∏—Ö–∏—è.

–ù–∞—É—á–∏—Ç—å—Å—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å —Å–≤–æ–∏ —ç–º–æ—Ü–∏–∏ –∏ –±—ã—Ç—å —Å –Ω–∏–º–∏ –≤ –∫–æ–Ω—Ç–∞–∫—Ç–µ.

–ö–æ–ª–æ–¥–∞ "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–∞–∫ –º–æ—Ä–µ" –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞–≥–ª—è–Ω—É—Ç—å –≤ –≥–ª—É–±–∏–Ω—É —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–≥–æ, –æ—Å–æ–∑–Ω–∞—Ç—å —ç–º–æ—Ü–∏–∏, –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è —Å —Ç–µ–º, —á—Ç–æ –ø–æ–¥–∞–≤–ª–µ–Ω–æ, –∏ –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è —Ä–æ—Å—Ç–∞.

‚ú® –í –¥–æ–±—Ä—ã–π –ø—É—Ç—å!
–Ø –±–ª–∞–≥–æ–¥–∞—Ä—é –í–∞—Å –∑–∞ –¥–æ–≤–µ—Ä–∏–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å –∫ —Å–≤–æ–µ–º—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –º–∏—Ä—É.

–í—ã–±–∏—Ä–∞–π—Ç–µ –≤ –º–µ–Ω—é –±–æ—Ç–∞ —Ç–æ, —á—Ç–æ –¥–ª—è –í–∞—Å —Å–µ–π—á–∞—Å –Ω–∞–∏–±–æ–ª–µ–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ!

‚ú® –ö–æ–º–∞–Ω–¥—ã:
/daily - –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è
/profile - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/help - –ü–æ–º–æ—â—å
/history - –ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –∫–∞—Ä—Ç
/consult - –ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
"""
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –º–µ–Ω—é, –Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É—è –ø—Ä–µ–¥—ã–¥—É—â–µ–µ
    await query.message.reply_text(
        menu_text,
        reply_markup=keyboard.get_main_menu_keyboard(),
        parse_mode='Markdown'
    )

async def show_daily_message(query, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ—Å–ª–∞–Ω–∏–µ –¥–Ω—è"""
    user = query.from_user
    
    # ‚úÖ –°—Ä–∞–∑—É —É–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ—Å–ª–∞–Ω–∏–µ –¥–Ω—è"
    await query.edit_message_reply_markup(reply_markup=None)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ
    message_data = db.get_random_message()
    if not message_data:
        await query.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–∞–Ω–∏—è.")
        return
    
    message_id, image_url, message_text = message_data
    
    message_caption = f"""ü¶ã –ü–æ—Å–ª–∞–Ω–∏–µ –î–Ω—è

–ü—Ä–æ—á–∏—Ç–∞–π—Ç–µ –µ–≥–æ –∏ –ø–æ—á—É–≤—Å—Ç–≤—É–π—Ç–µ, –∫–∞–∫–æ–π –æ—Ç–∫–ª–∏–∫ –æ–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç –≤–Ω—É—Ç—Ä–∏ –≤–∞—Å:

üîπ –ö–∞–∫ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –≤–∞—à–µ —Ç–µ–ª–æ?
üîπ –ö–∞–∫–∏–µ —ç–º–æ—Ü–∏–∏ –ø–æ–¥–Ω–∏–º–∞—é—Ç—Å—è?
üîπ –ß—Ç–æ –≤–∞–∂–Ω–æ–≥–æ —ç—Ç–æ –ø–æ—Å–ª–∞–Ω–∏–µ –Ω–µ—Å–µ—Ç –≤–∞–º?
üîπ –ö–∞–∫ —ç—Ç–æ –ø–æ—Å–ª–∞–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –Ω–∞ –≤–∞—à–µ–º –∂–∏–∑–Ω–µ–Ω–Ω–æ–º –ø—É—Ç–∏?"""
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–æ—Å–ª–∞–Ω–∏–µ–º
        await query.message.reply_photo(
            photo=image_url,
            caption=message_caption,
            reply_markup=keyboard.get_daily_message_keyboard(),  # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"
            parse_mode='Markdown'
        )
        
    except Exception as e:
        logging.error(f"Error sending message image: {e}")
        await query.message.reply_text(
            message_caption,
            reply_markup=keyboard.get_daily_message_keyboard(),
            parse_mode='Markdown'
        )


async def show_profile_from_button(query, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é"""
    user = query.from_user
    
    stats = db.get_user_stats(user.id)
    
    if not stats:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π
        await query.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        return
    
    limit, is_premium, total_cards, reg_date = stats
    
    profile_text = f"""
üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å

üìä –í—Å–µ–≥–æ –∫–∞—Ä—Ç –ø–æ–ª—É—á–µ–Ω–æ: {total_cards}
üéØ –õ–∏–º–∏—Ç –∫–∞—Ä—Ç –≤ –¥–µ–Ω—å: {limit}
üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {reg_date}
    """
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Ñ–∏–ª–µ–º, –Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É—è –ø—Ä–µ–¥—ã–¥—É—â–µ–µ
    await query.message.reply_text(
        profile_text,
        reply_markup=keyboard.get_profile_keyboard(),
        parse_mode='Markdown'
    )


async def profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile"""
    user = update.effective_user
    
    stats = db.get_user_stats(user.id)
    
    if not stats:
        await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É")
        return
    
    limit, is_premium, total_cards, reg_date = stats
    
    profile_text = f"""
üë§ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å

üìä –í—Å–µ–≥–æ –∫–∞—Ä—Ç –ø–æ–ª—É—á–µ–Ω–æ: {total_cards}
üéØ –õ–∏–º–∏—Ç –∫–∞—Ä—Ç –≤ –¥–µ–Ω—å: {limit}
üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {reg_date}
    """
    
    await update.message.reply_text(
        profile_text,
        reply_markup=keyboard.get_profile_keyboard(),  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ—Ñ–∏–ª—è
        parse_mode='Markdown'
    )

async def show_consult_from_button(query, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∏–∑ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é"""
    # URL —Ñ–æ—Ç–æ –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
    photo_url = "https://ibb.co/SXQR8ryT"  
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
        await query.message.reply_photo(
            photo=photo_url,
            parse_mode='Markdown'
        )
        
    except Exception as e:
        logging.error(f"‚ùå Error sending consult photo: {e}")
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ–≥–æ
    
    consult_text = """
üí´–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø –°–≤–µ—Ç–ª–∞–Ω–∞ –°–∫—Ä–æ–º–æ–≤–∞, –∏ —è –æ—á–µ–Ω—å —Ä–∞–¥–∞, —á—Ç–æ –í—ã —Å–¥–µ–ª–∞–ª–∏ —à–∞–≥ –∫ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. –ï—Å–ª–∏ –í—ã –∑–¥–µ—Å—å, –∑–Ω–∞—á–∏—Ç, –≤–Ω—É—Ç—Ä–∏ —É–∂–µ –µ—Å—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –≤–∞–∂–Ω—ã–º –ø–µ—Ä–µ–º–µ–Ω–∞–º –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è–º.

–Ø –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç (–º–∞–≥–∏—Å—Ç—Ä –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏, –ú–æ—Å–∫–≤–∞) —Å –±–æ–ª–µ–µ —á–µ–º 7-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —á–∞—Å—Ç–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏. –†–∞–±–æ—Ç–∞—é –æ–Ω–ª–∞–π–Ω —Å —Ä—É—Å—Å–∫–æ–≥–æ–≤–æ—Ä—è—â–∏–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É, —Å–æ–∑–¥–∞–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ –º—ã –≤–º–µ—Å—Ç–µ –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –ø—Ä–∏—á–∏–Ω—É –í–∞—à–∏—Ö —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π.

–ö–∞–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –º—ã –º–æ–∂–µ–º —Ä–µ—à–∏—Ç—å:
üî∏ –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ –∫—Ä–∏–∑–∏—Å—ã (—É—Ç—Ä–∞—Ç–∞, —Ä–∞–∑–≤–æ–¥, –ø–µ—Ä–µ–µ–∑–¥)
üî∏ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã–≥–æ—Ä–∞–Ω–∏–µ, –¥–µ–ø—Ä–µ—Å—Å–∏—è, —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å, –∞–ø–∞—Ç–∏—è, —Å—Ç—Ä–µ—Å—Å
üî∏ –°–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å, –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ, —Å—Ç—Ä–∞—Ö –æ—Ç–≤–µ—Ä–∂–µ–Ω–∏—è/–±–ª–∏–∑–æ—Å—Ç–∏
üî∏ –°–∞–º–æ–æ—Ü–µ–Ω–∫–∞, –Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ, –Ω–µ—É–º–µ–Ω–∏–µ –≥–æ–≤–æ—Ä–∏—Ç—å "–Ω–µ—Ç"
üî∏ –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –≤ —ç–º–∏–≥—Ä–∞—Ü–∏–∏ (—è —Å–∞–º–∞ –ø—Ä–æ—à–ª–∞ —ç—Ç–æ—Ç –ø—É—Ç—å –∏ –∑–Ω–∞—é, –∫–∞–∫ —Å–ª–æ–∂–Ω–æ —Å—Ç—Ä–æ–∏—Ç—å –∂–∏–∑–Ω—å —Å –Ω—É–ª—è)

‚öìÔ∏è –ú–æ–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥

ü¶ã–ú–æ—è —Ä–∞–±–æ—Ç–∞ ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã. –≠—Ç–æ –≥–ª—É–±–∏–Ω–Ω–∞—è –∏ –º—è–≥–∫–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è, –≥–¥–µ —è –∏—Å–ø–æ–ª—å–∑—É—é –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã. –ü–æ–¥–±–∏—Ä–∞—é –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞.

üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Ñ–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã
–§–æ—Ä–º–∞—Ç: –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –≤–∏–¥–µ–æ-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è (WhatsApp, Telegram, Google Meet, Teams)

–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 60 –º–∏–Ω—É—Ç

–°—Ç–æ–∏–º–æ—Å—Ç—å: 5500 ‚ÇΩ (–∏–ª–∏ 250‚Ç™). –ü—Ä–∏ –æ–ø–ª–∞—Ç–µ –Ω–µ –∏–∑ –†–æ—Å—Å–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞—à–µ–π –≤–∞–ª—é—Ç—ã –≤ —à–µ–∫–µ–ª–∏ –ø–æ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º—É –∫—É—Ä—Å—É.

üíé–ü–µ—Ä–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è (60-90 –º–∏–Ω—É—Ç), —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –∏ –Ω–∞–º–µ—Ç–∏—Ç—å –ø–ª–∞–Ω –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã. –Ø –æ–∑–≤—É—á—É —Å–≤–æ–µ –≤–∏–¥–µ–Ω—å–µ –≤–∞—à–µ–π –ø—Ä–æ–±–ª–µ–º—ã –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –µ—ë —Ä–µ—à–µ–Ω–∏—è.

–ï—Å–ª–∏ –í—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ –æ—Ç–∫–ª–∏–∫ –≤–Ω—É—Ç—Ä–∏ –∏ –≥–æ—Ç–æ–≤—ã –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è–º - —è –±—É–¥—É —Ä–∞–¥–∞ —Å—Ç–∞—Ç—å –í–∞—à–∏–º –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–æ–º –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º üíõ
"""
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    await query.message.reply_text(
        consult_text,
        reply_markup=keyboard.get_consult_keyboard(),
        parse_mode='Markdown'
    )


async def show_daily_card(query, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç—É –¥–Ω—è —Å –≤–æ–ø—Ä–æ—Å–∞–º–∏ –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è"""
    user = query.from_user
    
    # ‚úÖ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–∏–º–∏—Ç–∞ (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    can_take, reason = db.can_take_daily_card(user.id)
    if not can_take:
        await query.message.reply_text(f"‚ùå {reason}")
        return
    
    # ‚úÖ –°—Ä–∞–∑—É —É–±–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫—É –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º "–∑–∞–≥—Ä—É–∑–∫—É"
    await query.edit_message_reply_markup(reply_markup=None)
    loading_message = await query.message.reply_text("üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤–∞—à—É –∫–∞—Ä—Ç—É –¥–Ω—è...")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É
        card = db.get_random_card()
        if not card:
            await loading_message.edit_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ä—Ç—ã.")
            return
        
        card_id, card_name, image_url, description = card
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞—Ä—Ç—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
        context.user_data['last_card'] = {
            'card_id': card_id,
            'card_name': card_name,
            'image_url': image_url
        }
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∫–∞—Ä—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        db.record_user_card(user.id, card_id)
        
        card_text = f"""üé¥ –ö–∞—Ä—Ç–∞ –¥–Ω—è: {card_name}

üëÅ –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –∫–∞—Ä—Ç—É, –Ω–µ —Ç–æ—Ä–æ–ø–∏—Ç–µ—Å—å. –ü–æ–∑–≤–æ–ª—å—Ç–µ –æ–±—Ä–∞–∑—É –≥–æ–≤–æ—Ä–∏—Ç—å —Å –≤–∞–º–∏.

–û–ø–∏—Ä–∞–π—Ç–µ—Å—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–º–æ–≥—É—Ç –≤–∞–º –∑–∞–≥–ª—è–Ω—É—Ç—å –≤–Ω—É—Ç—Ä—å —Å–µ–±—è –∏ –∏–∑–≤–ª–µ—á—å –º–∞–∫—Å–∏–º—É–º —Å–º—ã—Å–ª–∞. –ó–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç—ã –≤ —Å–≤–æ–π –±–ª–æ–∫–Ω–æ—Ç –¥–ª—è –±–æ–ª—å—à–µ–≥–æ –æ—Å–æ–∑–Ω–∞–Ω–∏—è ‚§µÔ∏è

üîπ –°–æ—Å—Ç–æ—è–Ω–∏–µ: –ö–∞–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–ª–∏ —á—É–≤—Å—Ç–≤–æ —Ä–æ–∂–¥–∞–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ –≤–∞—Å, –∫–æ–≥–¥–∞ –≤—ã —Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —ç—Ç—É –∫–∞—Ä—Ç—É? –ß—Ç–æ –≤—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ —Ç–µ–ª–æ–º?

üîπ –ü–µ—Ä–≤—ã–π –û—Ç–∫–ª–∏–∫: –ö–∞–∫–æ–µ —Å–ª–æ–≤–æ –∏–ª–∏ —ç–º–æ—Ü–∏—è –ø—Ä–∏—à–ª–∏ –∫ –≤–∞–º –ø–µ—Ä–≤—ã–º–∏? (–î–æ–≤–µ—Ä—å—Ç–µ—Å—å —ç—Ç–æ–π –ø–µ—Ä–≤–æ–π –∏—Å–∫—Ä–µ!)

üîπ –ü—É—Ç–µ–≤–æ–¥–Ω–∞—è –ó–≤–µ–∑–¥–∞: –ö–∞–∫ —Å–∏–º–≤–æ–ª–∏–∫–∞ –∫–∞—Ä—Ç—ã (—Ü–≤–µ—Ç–∞, –æ–±—ä–µ–∫—Ç—ã) –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –∫–ª—é—á–æ–º –∫ —Ä–µ—à–µ–Ω–∏—é –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞? –û —á—ë–º –∏–º–µ–Ω–Ω–æ —ç—Ç–æ—Ç –æ–±—Ä–∞–∑ —Ö–æ—á–µ—Ç –≤–∞–º —Å–∫–∞–∑–∞—Ç—å?

üîπ –®–∞–≥ –≤–ø–µ—Ä–µ–¥: –ö–∞–∫–æ–π —Å–∞–º—ã–π –ø–µ—Ä–≤—ã–π, —Å–∞–º—ã–π –ª–µ–≥–∫–∏–π —à–∞–≥ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω—è—Ç—å —Å–µ–≥–æ–¥–Ω—è, –≤–¥–æ—Ö–Ω–æ–≤–∏–≤—à–∏—Å—å —ç—Ç–æ–π –∫–∞—Ä—Ç–æ–π?

–ü–æ–º–Ω–∏—Ç–µ: –í —Ä–∞–±–æ—Ç–µ —Å –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ –∫–∞—Ä—Ç–∞–º–∏ –Ω–µ—Ç ¬´–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö¬ª –æ—Ç–≤–µ—Ç–æ–≤. –í–∞–∂–µ–Ω –í–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π, –ª–∏—á–Ω—ã–π —Å–º—ã—Å–ª, —Ä–æ–∂–¥–∞—é—â–∏–π—Å—è –≤ –º–æ–º–µ–Ω—Ç –≤—Å—Ç—Ä–µ—á–∏ —Å –æ–±—Ä–∞–∑–æ–º."""
        
        try:
            # ‚úÖ –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ "–∑–∞–≥—Ä—É–∑–∫–∞"
            await loading_message.delete()
            
            # ‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç—É –û–î–ò–ù —Ä–∞–∑
            await query.message.reply_photo(
                photo=image_url,
                caption=card_text,
                reply_markup=keyboard.get_card_reflection_keyboard(),
                parse_mode='Markdown'
            )
            
        except Exception as e:
            logging.error(f"‚ùå Error sending card image: {e}")
            await loading_message.edit_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")
            await query.message.reply_text(
                card_text,
                reply_markup=keyboard.get_card_reflection_keyboard(),
                parse_mode='Markdown'
            )
            
    except Exception as e:
        logging.error(f"‚ùå Error in show_daily_card: {e}")
        await loading_message.edit_text("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ä—Ç—ã")


async def handle_flip_card(query, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç–∞ –∫–∞—Ä—Ç—ã (—Å—Ç–∞—Ä–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å)"""
    user_data = context.user_data
    last_card = user_data.get('last_card', {})
    
    questions_text = f"""üé¥ {last_card['card_name']}

üëÅ –í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:

‚Äî –ö–∞–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤—ã–∑—ã–≤–∞–µ—Ç –∫–∞—Ä—Ç–∞?
‚Äî –ö–∞–∫–æ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤—Å–ø–ª—ã–ª–æ?
‚Äî –ö–∞–∫–æ–µ —Å–ª–æ–≤–æ –∏–ª–∏ —ç–º–æ—Ü–∏—è –ø—Ä–∏—à–ª–∏ –ø–µ—Ä–≤—ã–º–∏?  
‚Äî –ö–∞–∫ —Å–∏–º–≤–æ–ª–∏–∫–∞ –∫–∞—Ä—Ç—ã –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤–∞–º —Å–µ–≥–æ–¥–Ω—è?

üí≠ –° –∫–∞–∫–∏–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —É –≤–∞—Å –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ?

‚ú® –í —Ä–∞–±–æ—Ç–µ —Å –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ –∫–∞—Ä—Ç–∞–º–∏ –Ω–µ—Ç ¬´–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö¬ª –æ—Ç–≤–µ—Ç–æ–≤ ‚Äî –≤–∞–∂–µ–Ω –≤–∞—à –ª–∏—á–Ω—ã–π —Å–º—ã—Å–ª, —Ä–æ–∂–¥–∞—é—â–∏–π—Å—è –≤ –º–æ–º–µ–Ω—Ç –≤—Å—Ç—Ä–µ—á–∏ —Å –æ–±—Ä–∞–∑–æ–º."""
    
    await query.edit_message_caption(
        caption=questions_text,
        reply_markup=None,
        parse_mode='Markdown'
    )


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = """
üìñ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:

/daily - –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è
/resources - –ê—Ä—Ö–∏–ø–µ–ª–∞–≥ —Ä–µ—Å—É—Ä—Å–æ–≤ 
/guide - –ì–∞–π–¥ –ø–æ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º—É –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É
/profile - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –ª–∏–º–∏—Ç—ã
/history - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é –≤—Å–µ—Ö –≤–∞—à–∏—Ö –∫–∞—Ä—Ç
/consult - –ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?
- –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –æ–¥–Ω—É —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É
- –ö–∞—Ä—Ç–∞ –≤—ã–±–∏—Ä–∞–µ—Ç—Å—è –∏–∑ –∫–æ–ª–æ–¥—ã —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º
- –í—ã –º–æ–∂–µ—Ç–µ —Ä–∞–∑–º—ã—à–ª—è—Ç—å –Ω–∞–¥ –∑–Ω–∞—á–µ–Ω–∏–µ–º –∫–∞—Ä—Ç—ã –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –≤–∞—à–µ–π –∂–∏–∑–Ω–∏

üí° –°–æ–≤–µ—Ç: –ù–µ –ø—ã—Ç–∞–π—Ç–µ—Å—å –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É —Å–ª–∏—à–∫–æ–º —Ä–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ. 
–î–∞–π—Ç–µ –æ–±—Ä–∞–∑—É –≤–æ–π—Ç–∏ –≤ –≤–∞—à–µ —Å–æ–∑–Ω–∞–Ω–∏–µ, –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø–µ—Ä–≤—ã–µ –º—ã—Å–ª–∏ –∏ —á—É–≤—Å—Ç–≤–∞.
    """
    
    await update.message.reply_text(
        help_text,
        reply_markup=keyboard.get_help_keyboard(),
        parse_mode='Markdown'
    )

async def reset_my_limit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–±—Ä–æ—Å —Å–≤–æ–µ–≥–æ –ª–∏–º–∏—Ç–∞ –∫–∞—Ä—Ç (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)"""
    user = update.effective_user
    
    try:
        conn = db.get_connection()
        cursor = conn.cursor()
        # –ò–°–ü–†–ê–í–õ–ï–ù–û –¥–ª—è PostgreSQL
        cursor.execute('UPDATE users SET last_daily_card_date = NULL WHERE user_id = %s', (user.id,))
        conn.commit()
        conn.close()
        
        await update.message.reply_text("‚úÖ –í–∞—à –ª–∏–º–∏—Ç —Å–±—Ä–æ—à–µ–Ω! –ú–æ–∂–µ—Ç–µ —Å–Ω–æ–≤–∞ –≤–∑—è—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è.")
        
    except Exception as e:
        logging.error(f"‚ùå Error resetting limit: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ª–∏–º–∏—Ç–∞")

async def debug_db(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—Ä–µ–º–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    user = update.effective_user
    
    try:
        conn = db.get_connection()
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ PostgreSQL - –ò–°–ü–†–ê–í–õ–ï–ù–û
        cursor.execute('''
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public'
        ''')
        tables = [table[0] for table in cursor.fetchall()]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –ò–°–ü–†–ê–í–õ–ï–ù–û –¥–ª—è PostgreSQL
        cursor.execute('SELECT * FROM users WHERE user_id = %s', (user.id,))
        user_data = cursor.fetchone()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ä—Ç—ã - –ò–°–ü–†–ê–í–õ–ï–ù–û –¥–ª—è PostgreSQL
        cursor.execute('SELECT COUNT(*) FROM user_cards WHERE user_id = %s', (user.id,))
        user_cards_count = cursor.fetchone()[0]
        
        cursor.execute('SELECT COUNT(*) FROM cards')
        total_cards_count = cursor.fetchone()[0]
        
        debug_text = f"""
üîç –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:

üìã –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ: {tables}
üë§ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ: {'‚úÖ –ï—Å—Ç—å' if user_data else '‚ùå –ù–µ—Ç'}
üé¥ –í–∞—à–∏—Ö –∫–∞—Ä—Ç –≤ –∏—Å—Ç–æ—Ä–∏–∏: {user_cards_count}
üÉè –í—Å–µ–≥–æ –∫–∞—Ä—Ç –≤ –∫–æ–ª–æ–¥–µ: {total_cards_count}
        """
        
        await update.message.reply_text(debug_text)
        conn.close()
        
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–∞–¥–∫–∏: {e}")


async def history(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –∫–∞—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç)"""
    user = update.effective_user
    
    try:
        history = db.get_user_card_history(user.id, limit=88)
        
        if not history:
            await update.message.reply_text(
                "üìù –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞—Ä—Ç.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /daily —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç—É!"
            )
            return
        
        if len(history) > 5:
            history_text = f"üìö –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∫–∞—Ä—Ç –∏–∑ {len(history)}:\n\n"
            history = history[:5]
        else:
            history_text = f"üìö –í–∞—à–∏ –∫–∞—Ä—Ç—ã ({len(history)}):\n\n"
        
        for i, (card_id, card_name, image_url, description, drawn_date) in enumerate(history, 1):
            if isinstance(drawn_date, str):
                date_str = drawn_date[:10]
            else:
                date_str = drawn_date.strftime("%d.%m.%Y")
            
            history_text += f"{i}. {card_name} - {date_str}\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏
        from telegram import InlineKeyboardButton, InlineKeyboardMarkup
        
        keyboard = [
            [InlineKeyboardButton("üñº –ü–æ–∫–∞–∑–∞—Ç—å —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏", callback_data="show_history_pics")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        history_text += "\nüí´ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∫–∞—Ä—Ç"
        
        await update.message.reply_text(
            history_text, 
            parse_mode='Markdown',
            reply_markup=reply_markup
        )
        
    except Exception as e:
        logging.error(f"‚ùå Error in history command: {e}")
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏")


async def history_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∏—Å—Ç–æ—Ä–∏–∏"""
    if context.args and context.args[0].lower() == "pics":
        await history_album(update, context)
    else:
        await history(update, context)

async def history_album(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ò—Å—Ç–æ—Ä–∏—è –≤ –≤–∏–¥–µ –∞–ª—å–±–æ–º–∞ (–Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏)"""
    user = update.effective_user
    
    try:
        history = db.get_user_card_history(user.id, limit=5)  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª—è –∞–ª—å–±–æ–º–∞
        
        if not history:
            await update.message.reply_text(
                "üìù –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞—Ä—Ç.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /daily —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç—É!"
            )
            return
        
        from telegram import InputMediaPhoto
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É
        media_group = []
        
        for i, (card_id, card_name, image_url, description, drawn_date) in enumerate(history, 1):
            if isinstance(drawn_date, str):
                date_str = drawn_date[:10]
            else:
                date_str = drawn_date.strftime("%d.%m.%Y")
            
            caption = f"#{i} {card_name} - {date_str}"
            
            media_group.append(
                InputMediaPhoto(
                    media=image_url,
                    caption=caption
                )
            )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–ª—å–±–æ–º
        await update.message.reply_media_group(media=media_group)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        
        
    except Exception as e:
        logging.error(f"‚ùå Error in history album: {e}")
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ–±—É–µ–º –ø—Ä–æ—Å—Ç–æ–π –º–µ—Ç–æ–¥
        await simple_history_with_images(update, context)

async def simple_history_with_images(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü—Ä–æ—Å—Ç–∞—è –∏—Å—Ç–æ—Ä–∏—è —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ (–ø–æ –æ–¥–Ω–æ–π)"""
    user = update.effective_user
    
    try:
        history = db.get_user_card_history(user.id, limit=5)
        
        if not history:
            await update.message.reply_text(
                "üìù –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞—Ä—Ç.\n"
                "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /daily —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç—É!"
            )
            return
        
        # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        history_text = f"üìö **–í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ {len(history)} –∫–∞—Ä—Ç:**\n\n"
        
        for i, (card_id, card_name, image_url, description, drawn_date) in enumerate(history, 1):
            if isinstance(drawn_date, str):
                date_str = drawn_date[:10]
            else:
                date_str = drawn_date.strftime("%d.%m.%Y")
            
            history_text += f"{i}. **{card_name}** - {date_str}\n"
        
        await update.message.reply_text(history_text, parse_mode='Markdown')
        
        # –ó–∞—Ç–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ø–æ –æ–¥–Ω–æ–π
        for i, (card_id, card_name, image_url, description, drawn_date) in enumerate(history, 1):
            if isinstance(drawn_date, str):
                date_str = drawn_date[:10]
            else:
                date_str = drawn_date.strftime("%d.%m.%Y")
            
            caption = f"#{i} **{card_name}** - {date_str}"
            
            try:
                await update.message.reply_photo(
                    photo=image_url,
                    caption=caption,
                    parse_mode='Markdown'
                )
            except Exception as e:
                logging.error(f"Error sending history image {i}: {e}")
                # –ï—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ
                await update.message.reply_text(
                    f"#{i} **{card_name}** - {date_str}\n(–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ)"
                )
        
    except Exception as e:
        logging.error(f"‚ùå Error in simple history: {e}")
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏")

async def admin_stats(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    user = update.effective_user
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if user.id not in ADMIN_IDS:
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    try:
        conn = db.get_connection()
        cursor = conn.cursor()
        
        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        cursor.execute('SELECT COUNT(*) FROM users')
        total_users = cursor.fetchone()[0]
        
        cursor.execute('SELECT COUNT(*) FROM user_cards')
        total_cards_issued = cursor.fetchone()[0]
        
        cursor.execute('SELECT COUNT(*) FROM cards')
        total_cards_in_deck = cursor.fetchone()[0]
        
        # –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ (–±—Ä–∞–ª–∏ –∫–∞—Ä—Ç—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π)
        cursor.execute('''
            SELECT COUNT(DISTINCT user_id) 
            FROM user_cards 
            WHERE drawn_date >= CURRENT_DATE - INTERVAL '7 days'
        ''')
        active_users = cursor.fetchone()[0]
        
        # –ù–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
        cursor.execute('''
            SELECT COUNT(*) 
            FROM users 
            WHERE registered_date >= CURRENT_DATE - INTERVAL '7 days'
        ''')
        new_users = cursor.fetchone()[0]
        
        # –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∫–∞—Ä—Ç
        cursor.execute('''
            SELECT u.user_id, u.first_name, u.username, COUNT(uc.id) as card_count
            FROM users u
            JOIN user_cards uc ON u.user_id = uc.user_id
            GROUP BY u.user_id, u.first_name, u.username
            ORDER BY card_count DESC
            LIMIT 10
        ''')
        top_users = cursor.fetchall()
        
        stats_text = f"""
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞

üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:
‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total_users}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö (7 –¥–Ω–µ–π): {active_users}
‚Ä¢ –ù–æ–≤—ã—Ö (7 –¥–Ω–µ–π): {new_users}

üé¥ –ö–∞—Ä—Ç—ã:
‚Ä¢ –í—Å–µ–≥–æ –∫–∞—Ä—Ç –≤ –∫–æ–ª–æ–¥–µ: {total_cards_in_deck}
‚Ä¢ –í—Å–µ–≥–æ –≤—ã–¥–∞–Ω–æ –∫–∞—Ä—Ç: {total_cards_issued}

üèÜ –¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:
"""
        
        for i, (user_id, first_name, username, card_count) in enumerate(top_users, 1):
            username_display = f"@{username}" if username else first_name
            stats_text += f"{i}. {username_display} - {card_count} –∫–∞—Ä—Ç\n"
        
        await update.message.reply_text(stats_text, parse_mode='Markdown')
        
        conn.close()
        
    except Exception as e:
        logging.error(f"‚ùå Error getting admin stats: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")


async def admin_users(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    user = update.effective_user
    
    if user.id not in ADMIN_IDS:
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    try:
        conn = db.get_connection()
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∫–∞—Ä—Ç
        cursor.execute('''
            SELECT u.user_id, u.username, u.first_name, u.registered_date, 
                   COUNT(uc.id) as card_count,
                   MAX(uc.drawn_date) as last_activity
            FROM users u
            LEFT JOIN user_cards uc ON u.user_id = uc.user_id
            GROUP BY u.user_id, u.username, u.first_name, u.registered_date
            ORDER BY u.registered_date DESC
        ''')
        
        users = cursor.fetchall()
        
        if not users:
            await update.message.reply_text("üìù –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ–∫–∞ –Ω–µ—Ç")
            return
        
        users_text = f"üë• **–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ({len(users)}):**\n\n"
        
        for i, (user_id, username, first_name, reg_date, card_count, last_activity) in enumerate(users[:20], 1):
            username_display = f"@{username}" if username else first_name
            reg_date_str = reg_date.strftime("%d.%m.%Y") if reg_date else "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
            last_activity_str = last_activity.strftime("%d.%m.%Y") if last_activity else "–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"
            
            users_text += f"{i}. {username_display}\n"
            users_text += f"   ID: {user_id}\n"
            users_text += f"   –ö–∞—Ä—Ç: {card_count}\n"
            users_text += f"   –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {reg_date_str}\n"
            users_text += f"   –ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: {last_activity_str}\n\n"
        
        if len(users) > 20:
            users_text += f"\n... –∏ –µ—â–µ {len(users) - 20} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        
        await update.message.reply_text(users_text, parse_mode='Markdown')
        
        conn.close()
        
    except Exception as e:
        logging.error(f"‚ùå Error getting users list: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")


async def export_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –≤ CSV"""
    user = update.effective_user
    
    if user.id not in ADMIN_IDS:
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    try:
        conn = db.get_connection()
        cursor = conn.cursor()
        
        # –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        cursor.execute('''
            SELECT user_id, username, first_name, last_name, registered_date
            FROM users 
            ORDER BY registered_date
        ''')
        users_data = cursor.fetchall()
        
        # –°–æ–∑–¥–∞–µ–º CSV –≤ –ø–∞–º—è—Ç–∏
        output = io.StringIO()
        writer = csv.writer(output)
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏
        writer.writerow(['User ID', 'Username', 'First Name', 'Last Name', 'Registered Date'])
        
        # –î–∞–Ω–Ω—ã–µ
        for row in users_data:
            writer.writerow(row)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
        output.seek(0)
        await update.message.reply_document(
            document=io.BytesIO(output.getvalue().encode()),
            filename="users_export.csv",
            caption="üìä –≠–∫—Å–ø–æ—Ä—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"
        )
        
        conn.close()
        
    except Exception as e:
        logging.error(f"‚ùå Error exporting data: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ –¥–∞–Ω–Ω—ã—Ö")

async def add_cards(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–î–æ–±–∞–≤–ª—è–µ—Ç –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –∫–∞—Ä—Ç—ã –≤ –±–∞–∑—É"""
    user = update.effective_user
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
    if user.id not in ADMIN_IDS:
        await update.message.reply_text("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã")
        return
    
    try:
        added_count = db.add_missing_cards()
        await update.message.reply_text(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {added_count} –Ω–æ–≤—ã—Ö –∫–∞—Ä—Ç –≤ –∫–æ–ª–æ–¥—É")
        
    except Exception as e:
        logging.error(f"‚ùå Error in add_cards: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∫–∞—Ä—Ç")


async def consult_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /consult - –∑–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é"""
    # URL —Ñ–æ—Ç–æ –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
    photo_url = "https://ibb.co/SXQR8ryT"  
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
        await update.message.reply_photo(
            photo=photo_url,
            parse_mode='Markdown'
        )
        
    except Exception as e:
        logging.error(f"‚ùå Error sending consult photo: {e}")
        # –ï—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ –Ω–µ–≥–æ
    
    consult_text = """
üí´–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø –°–≤–µ—Ç–ª–∞–Ω–∞ –°–∫—Ä–æ–º–æ–≤–∞, –∏ —è –æ—á–µ–Ω—å —Ä–∞–¥–∞, —á—Ç–æ –í—ã —Å–¥–µ–ª–∞–ª–∏ —à–∞–≥ –∫ –∑–∞–ø–∏—Å–∏ –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é. –ï—Å–ª–∏ –í—ã –∑–¥–µ—Å—å, –∑–Ω–∞—á–∏—Ç, –≤–Ω—É—Ç—Ä–∏ —É–∂–µ –µ—Å—Ç—å –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –≤–∞–∂–Ω—ã–º –ø–µ—Ä–µ–º–µ–Ω–∞–º –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è–º.

–Ø –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–µ–≤—Ç (–º–∞–≥–∏—Å—Ç—Ä –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏, –ú–æ—Å–∫–≤–∞) —Å –±–æ–ª–µ–µ —á–µ–º 7-–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º —á–∞—Å—Ç–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏. –†–∞–±–æ—Ç–∞—é –æ–Ω–ª–∞–π–Ω —Å —Ä—É—Å—Å–∫–æ–≥–æ–≤–æ—Ä—è—â–∏–º–∏ –∫–ª–∏–µ–Ω—Ç–∞–º–∏ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É, —Å–æ–∑–¥–∞–≤–∞—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ, –≥–¥–µ –º—ã –≤–º–µ—Å—Ç–µ –º–æ–∂–µ–º –Ω–∞–π—Ç–∏ –ø—Ä–∏—á–∏–Ω—É –í–∞—à–∏—Ö —Å–ª–æ–∂–Ω–æ—Å—Ç–µ–π.

–ö–∞–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã –º—ã –º–æ–∂–µ–º —Ä–µ—à–∏—Ç—å:
üî∏ –ñ–∏–∑–Ω–µ–Ω–Ω—ã–µ –∫—Ä–∏–∑–∏—Å—ã (—É—Ç—Ä–∞—Ç–∞, —Ä–∞–∑–≤–æ–¥, –ø–µ—Ä–µ–µ–∑–¥)
üî∏ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã–≥–æ—Ä–∞–Ω–∏–µ, –¥–µ–ø—Ä–µ—Å—Å–∏—è, —Ç—Ä–µ–≤–æ–∂–Ω–æ—Å—Ç—å, –∞–ø–∞—Ç–∏—è, —Å—Ç—Ä–µ—Å—Å
üî∏ –°–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö, —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å, –æ–¥–∏–Ω–æ—á–µ—Å—Ç–≤–æ, —Å—Ç—Ä–∞—Ö –æ—Ç–≤–µ—Ä–∂–µ–Ω–∏—è/–±–ª–∏–∑–æ—Å—Ç–∏
üî∏ –°–∞–º–æ–æ—Ü–µ–Ω–∫–∞, –Ω–µ—É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –≤ —Å–µ–±–µ, –Ω–µ—É–º–µ–Ω–∏–µ –≥–æ–≤–æ—Ä–∏—Ç—å "–Ω–µ—Ç"
üî∏ –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ –≤ —ç–º–∏–≥—Ä–∞—Ü–∏–∏ (—è —Å–∞–º–∞ –ø—Ä–æ—à–ª–∞ —ç—Ç–æ—Ç –ø—É—Ç—å –∏ –∑–Ω–∞—é, –∫–∞–∫ —Å–ª–æ–∂–Ω–æ —Å—Ç—Ä–æ–∏—Ç—å –∂–∏–∑–Ω—å —Å –Ω—É–ª—è)

‚öìÔ∏è –ú–æ–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã: –º—É–ª—å—Ç–∏–º–æ–¥–∞–ª—å–Ω—ã–π –ø–æ–¥—Ö–æ–¥

ü¶ã–ú–æ—è —Ä–∞–±–æ—Ç–∞ ‚Äî —ç—Ç–æ –Ω–µ –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–≥–æ–≤–æ—Ä—ã. –≠—Ç–æ –≥–ª—É–±–∏–Ω–Ω–∞—è –∏ –º—è–≥–∫–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è, –≥–¥–µ —è –∏—Å–ø–æ–ª—å–∑—É—é –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã. –ü–æ–¥–±–∏—Ä–∞—é –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞.

üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å –∏ —Ñ–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã
–§–æ—Ä–º–∞—Ç: –ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –≤–∏–¥–µ–æ-–∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è (WhatsApp, Telegram, Google Meet, Teams)

–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: 60 –º–∏–Ω—É—Ç

–°—Ç–æ–∏–º–æ—Å—Ç—å: 5500 ‚ÇΩ (–∏–ª–∏ 250‚Ç™). –ü—Ä–∏ –æ–ø–ª–∞—Ç–µ –Ω–µ –∏–∑ –†–æ—Å—Å–∏–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤–∞—à–µ–π –≤–∞–ª—é—Ç—ã –≤ —à–µ–∫–µ–ª–∏ –ø–æ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º—É –∫—É—Ä—Å—É.

üíé–ü–µ—Ä–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è (60-90 –º–∏–Ω—É—Ç), —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è –∏ –Ω–∞–º–µ—Ç–∏—Ç—å –ø–ª–∞–Ω –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç—ã. –Ø –æ–∑–≤—É—á—É —Å–≤–æ–µ –≤–∏–¥–µ–Ω—å–µ –≤–∞—à–µ–π –ø—Ä–æ–±–ª–µ–º—ã –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –µ—ë —Ä–µ—à–µ–Ω–∏—è.

–ï—Å–ª–∏ –í—ã —á—É–≤—Å—Ç–≤—É–µ—Ç–µ –æ—Ç–∫–ª–∏–∫ –≤–Ω—É—Ç—Ä–∏ –∏ –≥–æ—Ç–æ–≤—ã –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–º —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è–º - —è –±—É–¥—É —Ä–∞–¥–∞ —Å—Ç–∞—Ç—å –í–∞—à–∏–º –ø—Ä–æ–≤–æ–¥–Ω–∏–∫–æ–º –∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º üíõ
"""
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å –∫–Ω–æ–ø–∫–∞–º–∏
    await update.message.reply_text(
        consult_text,
        reply_markup=keyboard.get_consult_keyboard(),
        parse_mode='Markdown'
    )

async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞"""
    menu_text = """
üåä –û –∫–æ–ª–æ–¥–µ –∏ –º–∏—Å—Å–∏–∏ –±–æ—Ç–∞

–ú–æ—Ä–µ, –∫–∞–∫ –∏ –Ω–∞—à–∞ –∂–∏–∑–Ω—å, –º–Ω–æ–≥–æ–ª–∏–∫–æ: –æ–Ω–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ª–∞—Å–∫–æ–≤—ã–º, —É–º–∏—Ä–æ—Ç–≤–æ—Ä—è—é—â–∏–º, –∞ –ø–æ—Ä–æ–π ‚Äî –≥—Ä–æ–∑–Ω—ã–º –∏ —Ä–∞–∑—Ä—É—à–∏—Ç–µ–ª—å–Ω—ã–º. –≠—Ç–æ—Ç –æ–±—Ä–∞–∑ –∏–¥–µ–∞–ª—å–Ω–æ –æ—Ç—Ä–∞–∂–∞–µ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–µ–ª–æ–≤–µ–∫–∞: –æ—Ç —à—Ç–∏–ª—è –¥–æ –±—É—Ä–∏.

–ö–∞–∂–¥–∞—è –∫–∞—Ä—Ç–∞ –∫–æ–ª–æ–¥—ã –ø—Ä–æ–ø–∏—Ç–∞–Ω–∞ —ç–Ω–µ—Ä–≥–∏–µ–π –º–æ—Ä—è –∏ —Å–æ–∑–¥–∞–Ω–∞ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å –≤–∞–º:

–£–≤–∏–¥–µ—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∂–∏–∑–Ω–µ–Ω–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π.

–ù–∞–ø–æ–ª–Ω–∏—Ç—å—Å—è —Ä–µ—Å—É—Ä—Å–∞–º–∏ –∏ —ç–Ω–µ—Ä–≥–∏–µ–π, –∫–æ—Ç–æ—Ä—É—é –Ω–µ—Å–µ—Ç –≤ —Å–µ–±–µ –º–æ—Ä—Å–∫–∞—è —Å—Ç–∏—Ö–∏—è.

–ù–∞—É—á–∏—Ç—å—Å—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å —Å–≤–æ–∏ —ç–º–æ—Ü–∏–∏ –∏ –±—ã—Ç—å —Å –Ω–∏–º–∏ –≤ –∫–æ–Ω—Ç–∞–∫—Ç–µ.

–ö–æ–ª–æ–¥–∞ "–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–∞–∫ –º–æ—Ä–µ" –ø–æ–º–æ–≥–∞–µ—Ç –∑–∞–≥–ª—è–Ω—É—Ç—å –≤ –≥–ª—É–±–∏–Ω—É —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–≥–æ, –æ—Å–æ–∑–Ω–∞—Ç—å —ç–º–æ—Ü–∏–∏, –≤—Å—Ç—Ä–µ—Ç–∏—Ç—å—Å—è —Å —Ç–µ–º, —á—Ç–æ –ø–æ–¥–∞–≤–ª–µ–Ω–æ, –∏ –æ—Ç–∫—Ä—ã—Ç—å –Ω–æ–≤—ã–µ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è —Ä–æ—Å—Ç–∞.

‚ú® –í –¥–æ–±—Ä—ã–π –ø—É—Ç—å!
–Ø –±–ª–∞–≥–æ–¥–∞—Ä—é –í–∞—Å –∑–∞ –¥–æ–≤–µ—Ä–∏–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å –∫ —Å–≤–æ–µ–º—É –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –º–∏—Ä—É.

–í—ã–±–∏—Ä–∞–π—Ç–µ –≤ –º–µ–Ω—é –±–æ—Ç–∞ —Ç–æ, —á—Ç–æ –¥–ª—è –í–∞—Å —Å–µ–π—á–∞—Å –Ω–∞–∏–±–æ–ª–µ–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ!

‚ú® –ö–æ–º–∞–Ω–¥—ã:
/daily - –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è
/profile - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/help - –ü–æ–º–æ—â—å
/history - –ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –∫–∞—Ä—Ç
/consult - –ó–∞–ø–∏—Å—å –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é
"""
    
    # –ï—Å–ª–∏ —ç—Ç–æ callback query (–Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏), –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ù–û–í–û–ï —Å–æ–æ–±—â–µ–Ω–∏–µ
    if update.callback_query:
        query = update.callback_query
        await query.answer()
        await query.message.reply_text(  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º
            menu_text,
            reply_markup=keyboard.get_main_menu_keyboard(),
            parse_mode='Markdown'
        )
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await update.message.reply_text(
            menu_text,
            reply_markup=keyboard.get_main_menu_keyboard(),
            parse_mode='Markdown'
        )



async def show_history_from_button(query, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –∏–∑ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é"""
    user = query.from_user
    
    try:
        history = db.get_user_card_history(user.id, limit=20)
        
        if not history:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await query.message.reply_text(
                "üìù –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞—Ä—Ç.\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /daily —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–µ—Ä–≤—É—é –∫–∞—Ä—Ç—É!",
                reply_markup=keyboard.get_history_keyboard(),
                parse_mode='Markdown'
            )
            return
        
        if len(history) > 5:
            history_text = f"üìö –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∫–∞—Ä—Ç –∏–∑ {len(history)}:\n\n"
            history = history[:5]
        else:
            history_text = f"üìö –í–∞—à–∏ –∫–∞—Ä—Ç—ã ({len(history)}):\n\n"
        
        for i, (card_id, card_name, image_url, description, drawn_date) in enumerate(history, 1):
            if isinstance(drawn_date, str):
                date_str = drawn_date[:10]
            else:
                date_str = drawn_date.strftime("%d.%m.%Y")
            
            history_text += f"{i}. {card_name} - {date_str}\n"
        
        history_text += "\nüí´ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∫–∞—Ä—Ç"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏—Å—Ç–æ—Ä–∏–µ–π, –Ω–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä—É—è –ø—Ä–µ–¥—ã–¥—É—â–µ–µ
        await query.message.reply_text(
            history_text, 
            reply_markup=keyboard.get_history_keyboard(),
            parse_mode='Markdown'
        )
        
    except Exception as e:
        logging.error(f"‚ùå Error in history from button: {e}")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π
        await query.message.reply_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏",
            reply_markup=keyboard.get_history_keyboard(),
            parse_mode='Markdown'
        )


async def show_history_pics_from_button(query, context: ContextTypes.DEFAULT_TYPE):

    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ –∏ –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞"""
    user = query.from_user
    
    try:
        history = db.get_user_card_history(user.id, limit=5)
        
        if not history:
            await query.message.reply_text("üìù –£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞—Ä—Ç.")
            return
        
        from telegram import InputMediaPhoto
        
        # –°–æ–∑–¥–∞–µ–º –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—É
        media_group = []
        
        for i, (card_id, card_name, image_url, description, drawn_date) in enumerate(history, 1):
            if isinstance(drawn_date, str):
                date_str = drawn_date[:10]
            else:
                date_str = drawn_date.strftime("%d.%m.%Y")
            
            caption = f"#{i} {card_name} - {date_str}"
            
            media_group.append(
                InputMediaPhoto(
                    media=image_url,
                    caption=caption
                )
            )
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–ª—å–±–æ–º
        await query.message.reply_media_group(media=media_group)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é"
        await query.message.reply_text(
            "–í–∞—à–∏ –∫–∞—Ä—Ç—ã",
            reply_markup=keyboard.get_history_pics_keyboard(),  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞
            parse_mode='Markdown'
        )
        
    except Exception as e:
        logging.error(f"‚ùå Error in history album from query: {e}")
        await query.message.reply_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏",
            reply_markup=keyboard.get_history_pics_keyboard(),
            parse_mode='Markdown'
        )

async def resources_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /resources"""
    resources_text = """
üó∫Ô∏è –ê—Ä—Ö–∏–ø–µ–ª–∞–≥ —Ä–µ—Å—É—Ä—Å–æ–≤

–ò–∑–≤–∏–Ω–∏—Ç–µ, –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π. –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –í—ã —Å–º–æ–∂–µ—Ç–µ –µ—é –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è!
"""
    
    await update.message.reply_text(
        resources_text,
        reply_markup=keyboard.get_resources_keyboard(),
        parse_mode='Markdown'
    )

async def guide_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /guide"""
    try:
        pdf_url = "https://www.mediafire.com/file/6xft0yejnq07bgz/%25D0%2593%25D0%2590%25D0%2599%25D0%2594_%25D0%25BF%25D0%25BE_%25D1%2580%25D0%25B0%25D0%25B7%25D0%25B2%25D0%25B8%25D1%2582%25D0%25B8%25D1%258E_%25D1%258D%25D0%25BC%25D0%25BE%25D1%2586%25D0%25B8%25D0%25BE%25D0%25BD%25D0%25B0%25D0%25BB%25D1%258C%25D0%25BD%25D0%25BE%25D0%25B3%25D0%25BE_%25D0%25B8%25D0%25BD%25D1%2582%25D0%25B5%25D0%25BB%25D0%25BB%25D0%25B5%25D0%25BA%25D1%2582%25D0%25B0.pdf/file"  
        
        guide_text = """
üìö –ì–∞–π–¥ –ø–æ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º—É –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É

–û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∞–º –ø–æ–ª–µ–∑–Ω—ã–π –≥–∞–π–¥ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.

–≠—Ç–æ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å —Å–≤–æ–∏ —ç–º–æ—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º–∏.
"""
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º PDF —Ñ–∞–π–ª
        await update.message.reply_document(
            document=pdf_url,
            caption=guide_text,
            reply_markup=keyboard.get_guide_keyboard(),
            parse_mode='Markdown'
        )
        
    except Exception as e:
        logging.error(f"‚ùå Error sending guide PDF: {e}")
        
        # –ï—Å–ª–∏ PDF –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        error_text = """
üìö –ì–∞–π–¥ –ø–æ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º—É –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ñ–∞–π–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.

–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞!
"""
        await update.message.reply_text(
            error_text,
            reply_markup=keyboard.get_guide_keyboard(),
            parse_mode='Markdown'
        )

async def show_resources_from_button(query, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ—Å—É—Ä—Å—ã –∏–∑ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é"""
    resources_text = """
üó∫Ô∏è –ê—Ä—Ö–∏–ø–µ–ª–∞–≥ —Ä–µ—Å—É—Ä—Å–æ–≤

–ò–∑–≤–∏–Ω–∏—Ç–µ, –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π. –í —Å–∫–æ—Ä–æ–º –≤—Ä–µ–º–µ–Ω–∏ –í—ã —Å–º–æ–∂–µ—Ç–µ –µ—é –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è!

–ó–¥–µ—Å—å –±—É–¥—É—Ç —Å–æ–±—Ä–∞–Ω—ã –ø–æ–ª–µ–∑–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã, —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è –∏ —Ä–µ—Å—É—Ä—Å—ã –¥–ª—è –≤–∞—à–µ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è.
"""
    
    await query.message.reply_text(
        resources_text,
        reply_markup=keyboard.get_resources_keyboard(),
        parse_mode='Markdown'
    )

async def show_guide_from_button(query, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–∞–π–¥ –∏–∑ –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é"""
    try:
        # URL PDF —Ñ–∞–π–ª–∞ (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π URL)
        pdf_url = "https://www.mediafire.com/file/6xft0yejnq07bgz/%25D0%2593%25D0%2590%25D0%2599%25D0%2594_%25D0%25BF%25D0%25BE_%25D1%2580%25D0%25B0%25D0%25B7%25D0%25B2%25D0%25B8%25D1%2582%25D0%25B8%25D1%258E_%25D1%258D%25D0%25BC%25D0%25BE%25D1%2586%25D0%25B8%25D0%25BE%25D0%25BD%25D0%25B0%25D0%25BB%25D1%258C%25D0%25BD%25D0%25BE%25D0%25B3%25D0%25BE_%25D0%25B8%25D0%25BD%25D1%2582%25D0%25B5%25D0%25BB%25D0%25BB%25D0%25B5%25D0%25BA%25D1%2582%25D0%25B0.pdf/file"  # –ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –†–ï–ê–õ–¨–ù–´–ô URL
        
        guide_text = """
üìö –ì–∞–π–¥ –ø–æ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º—É –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É

–û—Ç–ø—Ä–∞–≤–ª—è—é –≤–∞–º –ø–æ–ª–µ–∑–Ω—ã–π –≥–∞–π–¥ –ø–æ —Ä–∞–∑–≤–∏—Ç–∏—é —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.

–≠—Ç–æ—Ç –º–∞—Ç–µ—Ä–∏–∞–ª –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –ª—É—á—à–µ –ø–æ–Ω–∏–º–∞—Ç—å —Å–≤–æ–∏ —ç–º–æ—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º–∏.
"""
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º PDF —Ñ–∞–π–ª
        await query.message.reply_document(
            document=pdf_url,
            caption=guide_text,
            reply_markup=keyboard.get_guide_keyboard(),
            parse_mode='Markdown'
        )
        
    except Exception as e:
        logging.error(f"‚ùå Error sending guide PDF from button: {e}")
        
        # –ï—Å–ª–∏ PDF –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        error_text = """
üìö –ì–∞–π–¥ –ø–æ –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–º—É –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É

–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ñ–∞–π–ª –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.

–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞!
"""
        await query.message.reply_text(
            error_text,
            reply_markup=keyboard.get_guide_keyboard(),
            parse_mode='Markdown'
        )