from telegram import Update
from telegram.ext import ContextTypes
from database import db 
from config import ADMIN_IDS
import logging

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    logging.info(f"New user: ID={user.id}, Name={user.first_name}, "
                 f"Username=@{user.username}, LastName={user.last_name}")
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π None –∑–Ω–∞—á–µ–Ω–∏–π
    db.get_or_create_user(
        user_id=user.id,
        username=user.username or "",  # –ï—Å–ª–∏ username None - –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
        first_name=user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",  # –ï—Å–ª–∏ first_name None
        last_name=user.last_name or ""  # –ï—Å–ª–∏ last_name None
    )
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —É—á–µ—Ç–æ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    if user.username:
        greeting = f"–ü—Ä–∏–≤–µ—Ç, @{user.username}! üëã"
    else:
        greeting = f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! üëã"
    
    welcome_text = f"""
{greeting}

–Ø - –±–æ—Ç –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–∏—Ö –∫–∞—Ä—Ç. –ö–∞–∂–¥—ã–π –¥–µ–Ω—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —Å–≤–æ—é –∫–∞—Ä—Ç—É –¥–Ω—è, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –∑–∞–¥—É–º–∞—Ç—å—Å—è –æ —Ç–µ–∫—É—â–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏.

‚ú® –ö–æ–º–∞–Ω–¥—ã:
/daily - –ü–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è
/profile - –í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/help - –ü–æ–º–æ—â—å

üé¥ –ö–∞—Ä—Ç–∞ –¥–Ω—è - —ç—Ç–æ —Å–ª—É—á–∞–π–Ω–∞—è –∫–∞—Ä—Ç–∞ –∏–∑ –∫–æ–ª–æ–¥—ã, –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å, –Ω–∞ —á—Ç–æ –æ–±—Ä–∞—Ç–∏—Ç—å –≤–Ω–∏–º–∞–Ω–∏–µ —Å–µ–≥–æ–¥–Ω—è.
    """
    
    await update.message.reply_text(welcome_text)

async def daily_card(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /daily"""
    user = update.effective_user
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–Ω–æ –ª–∏ –≤–∑—è—Ç—å –∫–∞—Ä—Ç—É
    can_take, reason = db.can_take_daily_card(user.id)
    
    if not can_take:
        await update.message.reply_text(f"‚ùå {reason}")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª—É—á–∞–π–Ω—É—é –∫–∞—Ä—Ç—É
    card = db.get_random_card()
    if not card:
        await update.message.reply_text("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–∞—Ä—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return
    
    card_id, card_name, image_url, description = card
    
    # –ù–æ–≤—ã–π —Ñ–æ—Ä–º–∞—Ç —Ç–µ–∫—Å—Ç–∞ –∫–∞—Ä—Ç—ã
    card_text = f"""‚ú® –í—ã–±–æ—Ä —Å–¥–µ–ª–∞–Ω! –ö–∞—Ä—Ç–∞ –¥–Ω—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è - {card_name}. 

üëÅ –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ –Ω–µ—ë –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –∏ –æ—Ç–º–µ—Ç—å—Ç–µ:
‚Äî –∫–∞–∫–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–Ω–∞ –≤—ã–∑—ã–≤–∞–µ—Ç?
‚Äî –∫–∞–∫–æ–µ –≤–æ—Å–ø–æ–º–∏–Ω–∞–Ω–∏–µ –≤—Å–ø–ª—ã–ª–æ?
‚Äî –∫–∞–∫–æ–µ —Å–ª–æ–≤–æ –∏–ª–∏ —ç–º–æ—Ü–∏—è –ø—Ä–∏—à–ª–∏ –ø–µ—Ä–≤—ã–º–∏?
‚Äî –∫–∞–∫ —Å–∏–º–≤–æ–ª–∏–∫–∞ –∫–∞—Ä—Ç—ã –º–æ–∂–µ—Ç –ø–æ–º–æ—á—å –≤–∞–º —Å–µ–≥–æ–¥–Ω—è?

üí≠ –° –∫–∞–∫–∏–º —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º —É –≤–∞—Å –∞—Å—Å–æ—Ü–∏–∏—Ä—É–µ—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ ‚Äî —Ä–∞–¥–æ—Å—Ç—å, –≥—Ä—É—Å—Ç—å, —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ, –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏–µ –∏–ª–∏ —á—Ç–æ-—Ç–æ –¥—Ä—É–≥–æ–µ?

–í —Ä–∞–±–æ—Ç–µ —Å –º–µ—Ç–∞—Ñ–æ—Ä–∏—á–µ—Å–∫–∏–º–∏ –∫–∞—Ä—Ç–∞–º–∏ –Ω–µ—Ç ¬´–ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö¬ª –æ—Ç–≤–µ—Ç–æ–≤ ‚Äî –≤–∞–∂–µ–Ω –≤–∞—à –ª–∏—á–Ω—ã–π —Å–º—ã—Å–ª, —Ä–æ–∂–¥–∞—é—â–∏–π—Å—è –≤ –º–æ–º–µ–Ω—Ç –≤—Å—Ç—Ä–µ—á–∏ —Å –æ–±—Ä–∞–∑–æ–º."""
    
    try:
        
        await update.message.reply_photo(
            photo=image_url,  
            caption=card_text,
            parse_mode='Markdown'
        )
        
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        db.record_user_card(user.id, card_id)
        
    except FileNotFoundError:
        # –ï—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        await update.message.reply_text(
            card_text + "\n\n‚ö†Ô∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ",
            parse_mode='Markdown'
        )
        db.record_user_card(user.id, card_id)
    except Exception as e:
        logging.error(f"Error sending card: {e}")
        await update.message.reply_text(
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–∞—Ä—Ç—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )

async def profile(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /profile"""
    user = update.effective_user
    
    logging.info(f"üîÑ Profile command from user {user.id}")
    
    try:
        conn = db.get_connection()
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ - –ò–°–ü–†–ê–í–õ–ï–ù–û –¥–ª—è PostgreSQL
        cursor.execute('SELECT * FROM users WHERE user_id = %s', (user.id,))
        user_data = cursor.fetchone()
        
        if not user_data:
            await update.message.reply_text("‚ùå –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start")
            conn.close()
            return
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞—Ä—Ç - –ò–°–ü–†–ê–í–õ–ï–ù–û –¥–ª—è PostgreSQL
        cursor.execute('SELECT COUNT(*) FROM user_cards WHERE user_id = %s', (user.id,))
        total_cards = cursor.fetchone()[0]
        
        # –ü–æ–ª—É—á–∞–µ–º –ª–∏–º–∏—Ç - –ò–°–ü–†–ê–í–õ–ï–ù–û –¥–ª—è PostgreSQL
        cursor.execute('SELECT daily_cards_limit FROM users WHERE user_id = %s', (user.id,))
        limit_result = cursor.fetchone()
        limit = limit_result[0] if limit_result else 3
        
        profile_text = f"""
üë§ **–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å**

üìä –í—Å–µ–≥–æ –∫–∞—Ä—Ç –ø–æ–ª—É—á–µ–Ω–æ: {total_cards}
üéØ –õ–∏–º–∏—Ç –∫–∞—Ä—Ç –≤ –¥–µ–Ω—å: {limit}
üìÖ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.id}
        """
        
        await update.message.reply_text(profile_text)
        conn.close()
        
    except Exception as e:
        logging.error(f"‚ùå Error in profile command: {e}")
        await update.message.reply_text("‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è")

async def reset_my_limit(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–±—Ä–æ—Å —Å–≤–æ–µ–≥–æ –ª–∏–º–∏—Ç–∞ –∫–∞—Ä—Ç (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)"""
    user = update.effective_user
    
    try:
        conn = db.get_connection()
        cursor = conn.cursor()
        # –ò–°–ü–†–ê–í–õ–ï–ù–û –¥–ª—è PostgreSQL
        cursor.execute('UPDATE users SET last_daily_card_date = NULL WHERE user_id = %s', (user.id,))
        conn.commit()
        conn.close()
        
        await update.message.reply_text("‚úÖ –í–∞—à –ª–∏–º–∏—Ç —Å–±—Ä–æ—à–µ–Ω! –ú–æ–∂–µ—Ç–µ —Å–Ω–æ–≤–∞ –≤–∑—è—Ç—å –∫–∞—Ä—Ç—É –¥–Ω—è.")
        
    except Exception as e:
        logging.error(f"‚ùå Error resetting limit: {e}")
        await update.message.reply_text("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –ª–∏–º–∏—Ç–∞")

async def debug_db(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–í—Ä–µ–º–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    user = update.effective_user
    
    try:
        conn = db.get_connection()
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –≤ PostgreSQL - –ò–°–ü–†–ê–í–õ–ï–ù–û
        cursor.execute('''
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public'
        ''')
        tables = [table[0] for table in cursor.fetchall()]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –ò–°–ü–†–ê–í–õ–ï–ù–û –¥–ª—è PostgreSQL
        cursor.execute('SELECT * FROM users WHERE user_id = %s', (user.id,))
        user_data = cursor.fetchone()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—Ä—Ç—ã - –ò–°–ü–†–ê–í–õ–ï–ù–û –¥–ª—è PostgreSQL
        cursor.execute('SELECT COUNT(*) FROM user_cards WHERE user_id = %s', (user.id,))
        user_cards_count = cursor.fetchone()[0]
        
        cursor.execute('SELECT COUNT(*) FROM cards')
        total_cards_count = cursor.fetchone()[0]
        
        debug_text = f"""
üîç **–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:**

üìã –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ: {tables}
üë§ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ: {'‚úÖ –ï—Å—Ç—å' if user_data else '‚ùå –ù–µ—Ç'}
üé¥ –í–∞—à–∏—Ö –∫–∞—Ä—Ç –≤ –∏—Å—Ç–æ—Ä–∏–∏: {user_cards_count}
üÉè –í—Å–µ–≥–æ –∫–∞—Ä—Ç –≤ –∫–æ–ª–æ–¥–µ: {total_cards_count}
        """
        
        await update.message.reply_text(debug_text)
        conn.close()
        
    except Exception as e:
        await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–∞–¥–∫–∏: {e}")
